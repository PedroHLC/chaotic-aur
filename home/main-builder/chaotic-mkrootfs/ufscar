#!/usr/bin/env bash
#==============================================================================
# Prepare UFSCAR's ArchLinux generic lab image
#==============================================================================
# Created and mantained by PedroHLC <root@pedrohlc.com>
# Last Update: 2020-01-17 13:00
#------------------------------------------------------------------------------


#==============================================================================
# Pre-setup preparations
#==============================================================================
# Set script options
#------------------------------------------------------------------------------
set -o errexit

#------------------------------------------------------------------------------
# Verify constraints
#------------------------------------------------------------------------------
[[ "$(whoami)" == 'root' ]] && echo 'Not expected to be built using root' && exit -1

#------------------------------------------------------------------------------
# Define constants & settings
#------------------------------------------------------------------------------
readonly BASE_BUILD_DIR='/tmp/chaotic-rootfs'
readonly BASE_BUILD_ARCH='x86_64'
readonly BASE_BUILD_ID="${BASE_BUILD_ID:-$(date '+%Y%m%d%H%M%S')}"
readonly BASE_BUILD_NAME="${BASE_BUILD_NAME:-ufscar-base-${BASE_BUILD_ID}-$BASE_BUILD_ARCH}"
readonly BASE_BUILD_IMAGE="${BASE_BUILD_NAME}.img"
readonly BASE_BUILD_DEST='/srv/http/chaotic-aur/rootfs/'

#------------------------------------------------------------------------------
# Prepare build directory
#------------------------------------------------------------------------------
mkdir -p "$BASE_BUILD_DIR"
cd "$BASE_BUILD_DIR"

#==============================================================================
# Create and mount a virtual raw disk
#==============================================================================
truncate -s 100G "$BASE_BUILD_IMAGE"
sudo losetup /dev/loop9 "$BASE_BUILD_IMAGE"
sudo parted /dev/loop9 mktable msdos
sudo parted /dev/loop9 mkpart primary ext4 1M '100%'
sudo partprobe /dev/loop9
sudo mkfs.ext4 -q /dev/loop9p1
sudo mkdir "$BASE_BUILD_NAME"
sudo mount -t ext4 /dev/loop9p1 "$BASE_BUILD_NAME"
pushd "$BASE_BUILD_NAME"

#==============================================================================
# Prepare filesystem and initial settings before chrooting
#==============================================================================
# Install base package
#------------------------------------------------------------------------------
sudo pacstrap -GM . base

#------------------------------------------------------------------------------
# Set locale
#------------------------------------------------------------------------------
pushd ./etc
sudo rm localtime || echo 'There was no localtime'
sudo ln -s ../usr/share/zoneinfo/America/Sao_Paulo ./localtime
popd

cat <<EOF | sudo cp /dev/stdin ./etc/locale.gen
en_US.UTF-8 UTF-8
pt_BR.UTF-8 UTF-8
EOF

echo 'LANG=pt_BR.UTF-8' | sudo cp /dev/stdin ./etc/locale.conf
echo 'KEYMAP=br-abnt2' | sudo cp /dev/stdin ./etc/vconsole.conf
sudo chmod 644 ./etc/locale.conf

#------------------------------------------------------------------------------
# Set hostname and update it in hosts
#------------------------------------------------------------------------------
echo 'ufscar-pc' | sudo cp /dev/stdin ./etc/hostname

cat <<EOF | sudo tee -a ./etc/hosts > /dev/null
127.0.0.1	localhost
::1		localhost
127.0.1.1	ufscar-pc.localdomain	ufscar
EOF

#------------------------------------------------------------------------------
# Set only brazilian servers in mirrorlist
#------------------------------------------------------------------------------
cat <<EOF | sudo cp /dev/stdin ./etc/pacman.d/mirrorlist
Server = http://mirror.ufscar.br/archlinux/\$repo/os/\$arch
Server = http://archlinux.c3sl.ufpr.br/\$repo/os/\$arch
Server = http://www.caco.ic.unicamp.br/archlinux/\$repo/os/\$arch
Server = https://www.caco.ic.unicamp.br/archlinux/\$repo/os/\$arch
Server = http://linorg.usp.br/archlinux/\$repo/os/\$arch
Server = http://pet.inf.ufsc.br/mirrors/archlinux/\$repo/os/\$arch
Server = http://archlinux.pop-es.rnp.br/\$repo/os/\$arch
Server = http://mirror.ufam.edu.br/archlinux/\$repo/os/\$arch
Server = http://br.mirror.archlinux-br.org/\$repo/os/\$arch
EOF

#------------------------------------------------------------------------------
# Add [chaotic-aur] to pacman.conf
#------------------------------------------------------------------------------
cat <<EOF | sudo tee -a ./etc/pacman.conf > /dev/null
[multilib]
Include = /etc/pacman.d/mirrorlist

[chaotic-aur]
Server = https://lonewolf.pedrohlc.com/\$repo/\$arch
Server = http://chaotic.bangl.de/\$repo/\$arch
EOF

#------------------------------------------------------------------------------
# Add Virtio SCSI modules to init
#------------------------------------------------------------------------------
sudo sed -i'' 's/^MODULES=(/MODULES=(virtio virtio_scsi virtio_blk virtio_pci virtio_net /' ./etc/mkinitcpio.conf

#------------------------------------------------------------------------------
# Add a swapfile
#------------------------------------------------------------------------------
sudo truncate -s 0 ./swapfile
sudo chattr +C ./swapfile
sudo fallocate -l 512M ./swapfile
sudo chmod 600 ./swapfile
sudo mkswap /swapfile

#------------------------------------------------------------------------------
# Generate fstab
#------------------------------------------------------------------------------
genfstab -U /mnt | awk '!/swap/' | echo '/swapfile none swap defaults 0 0' | sudo tee -a ./etc/fstab > /dev/null

#==============================================================================
# Enter chroot and complete installation
#==============================================================================
sudo arch-chroot . /usr/bin/bash <<EOF
#!/usr/bin/bash
set -o errexit

# Set BIOS time mode and generate locale files
hwclock --systohc
locale-gen

# Initiate keyring and add [chaotic-aur] keys
pacman-key --init
pacman-key --populate archlinux
pacman-key --keyserver keys.mozilla.org -r 3056513887B78AEB
pacman-key --lsign-key 3056513887B78AEB 

# Install desired packages
pacman -Syu --noconfirm
pacman -S linux-zen linux-zen-headers --noconfirm
pacman -S --noconfirm --needed \
	base-devel multilib-devel git man \
	sudo yay networkmanager pulseaudio-alsa \
	\
	syslinux efibootmgr \
	ntfs-3g dosfstools mtools exfat-utils un{rar,zip} p7zip \
	gvfs-mtp android-udev-git wget curl \
	\
	nano neovim-drop-in openssh \
	\
	plasma sddm kdebase packagekit-qt5 \
	\
	{,lib32-}mesa {,lib32-}libva-{mesa,intel}-driver {,lib32-}vulkan-icd-loader \
	intel-ucode xf86-video-intel \
	xorg-server {,lib32-}vulkan-intel intel-media-driver \
	\
	firefox google-chrome mpv wine-staging xarchiver \
	wps-office wps-office-mui-pt-br ttf-wps-fonts wps-office-extension-portuguese-brazilian-dictionary \
	quartus-130 libpng12 scilab-bin \
	firefox-ublock-origin firefox-extension-plasma-integration \
	\
	gnu-free-fonts \
	ttf-{dejavu,droid,fira-{code,mono,sans}} \
	ttf-{liberation,ms-fonts,ubuntu-font-family,wps-fonts}
pacman -Rsn --noconfirm konqueror

# Create main user
useradd -m -g wheel -G users -s /bin/bash archer
passwd -d root
passwd -d archer
groupadd plugdev
usermod -aG plugdev archer

# Update modules in initramfs
mkinitcpio -Pv
EOF

#------------------------------------------------------------------------------
# Add matlab which package is local
#------------------------------------------------------------------------------
sudo pacman -r . -U ~/'.ufscar/matlab-ufscar-9.7.0.0-0-x86_64.pkg.tar.xz' --noconfirm

#==============================================================================
# With files now in place, change more settings
#==============================================================================
# Enable services
#------------------------------------------------------------------------------
sudo systemctl --root=. enable NetworkManager
sudo systemctl --root=. enable sddm

#------------------------------------------------------------------------------
# Add all real users to sudoers
#------------------------------------------------------------------------------
echo '%wheel ALL=(ALL) ALL' | sudo tee -a ./etc/sudoers > /dev/null

#------------------------------------------------------------------------------
# Add UFSCAR's license server
#------------------------------------------------------------------------------
echo 'export LM_LICENSE_FILE=1800@licencas.ufscar.br' | sudo tee ./etc/profile.d/ufscar.sh > /dev/null

#------------------------------------------------------------------------------
# KDE autologin
#------------------------------------------------------------------------------
sudo mkdir ./etc/sddm.conf.d
sudo chmod 755 ./etc/sddm.conf.d
cat <<EOF | sudo tee -a ./etc/sddm.conf.d/00-ufscar.conf > /dev/null
[Autologin]
User=archer
Session=plasma

[Theme]
Current=breeze
EOF
sudo chmod 600 ./etc/sddm.conf.d/00-ufscar.conf

#------------------------------------------------------------------------------
# KDE keyboard
#------------------------------------------------------------------------------
cat <<EOF | sudo tee -a ./etc/xdg/kxkbrc > /dev/null
[Layout]
LayoutList=br
LayoutLoopCount=-1
Model=pc101
Use=true
EOF
sudo chmod 644 ./etc/xdg/kxkbrc

#------------------------------------------------------------------------------
# KDE locale
#------------------------------------------------------------------------------
cat <<EOF | sudo tee -a ./etc/xdg/plasma-localerc > /dev/null
[Formats]
LANG=pt_BR.UTF-8

[Translations]
LANGUAGE=pt_BR
EOF
sudo chmod 644 ./etc/xdg/plasma-localerc

#------------------------------------------------------------------------------
# KDE theme
#------------------------------------------------------------------------------
cat <<EOF | sudo tee -a ./etc/xdg/plasmarc > /dev/null
[Theme]
name=breeze-dark
EOF
sudo chmod 644 ./etc/xdg/plasmarc

#------------------------------------------------------------------------------
# Remove Suspend / Hibernate
#------------------------------------------------------------------------------
cat <<EOF | sudo tee ./etc/polkit-1/rules.d/55-inhibit-causevm.rules > /dev/null
polkit.addRule(function(action, subject) {
    if (action.id == "org.freedesktop.login1.suspend" ||
        action.id == "org.freedesktop.login1.suspend-multiple-sessions" ||
    	action.id == "org.freedesktop.login1.hibernate" ||
        action.id == "org.freedesktop.login1.hibernate-multiple-sessions")
    {
        return polkit.Result.NO;
    }
});

EOF

#------------------------------------------------------------------------------
# I don't like "Área de Trabalho", so set home directories to be in english
#------------------------------------------------------------------------------
sudo mkdir -p ./home/archer/{.config/plasma-workspace/shutdown,Desktop,Downloads,Documents,Music,Pictures,Videos}
cat <<EOF | sudo tee ./home/archer/.config/user-dirs.dirs > /dev/null
XDG_DESKTOP_DIR="\$HOME/Desktop"
XDG_DOWNLOAD_DIR="\$HOME/Downloads"
XDG_TEMPLATES_DIR="\$HOME/Templates"
XDG_PUBLICSHARE_DIR="\$HOME/Public"
XDG_DOCUMENTS_DIR="\$HOME/Documents"
XDG_MUSIC_DIR="\$HOME/Music"
XDG_PICTURES_DIR="\$HOME/Pictures"
XDG_VIDEOS_DIR="\$HOME/Videos"
EOF
echo 'en_US' | sudo tee ./home/archer/.config/user-dirs.locale > /dev/null

#------------------------------------------------------------------------------
# Poweroff on Logout/Reboot
#------------------------------------------------------------------------------
cat <<EOF | sudo tee ./home/archer/.config/plasma-workspace/shutdown/quitvm.sh
#!/usr/bin/env bash
poweroff -f
EOF
sudo chmod +x ./home/archer/.config/plasma-workspace/shutdown/quitvm.sh

#------------------------------------------------------------------------------
# Fix things written as root
#------------------------------------------------------------------------------
sudo arch-chroot . chown -R archer:users /home/archer

#==============================================================================
# Finish install
#==============================================================================
# Clean pacman cache
#------------------------------------------------------------------------------
yes | sudo pacman -r . -Scc

#------------------------------------------------------------------------------
# Install Syslinux
#------------------------------------------------------------------------------
sudo syslinux-install_update -i -a -m -c .
sudo sed -i'' 's/-linux/-linux-zen/g;s/TIMEOUT.*$//g;s/UI.*$//g;s/MENU.*$//g;s/sda3/sda1/g' ./boot/syslinux/syslinux.cfg

#------------------------------------------------------------------------------
# Umount rootfs
#------------------------------------------------------------------------------
popd
sudo umount -Rv "$BASE_BUILD_NAME"
sudo sync
sudo losetup -d /dev/loop9
sudo rmdir "$BASE_BUILD_NAME"

#------------------------------------------------------------------------------
# Run the system once, so it starts faster later
#------------------------------------------------------------------------------
echo '[@] Running system once, this will take 6 minutes'
(sleep 300; echo; echo system_powerdown) | qemu-system-x86_64 -m 3G -enable-kvm "$BASE_BUILD_IMAGE" -vnc :13 -monitor stdio -serial none > /dev/null

#------------------------------------------------------------------------------
# Convert image to QCOW2, deletes original
#------------------------------------------------------------------------------
echo '[@] Converting image, this can take a while...'
qemu-img convert -W -m 16 -f raw -O qcow2 -c "$BASE_BUILD_IMAGE" "${BASE_BUILD_NAME}.qcow2"
sudo rm "$BASE_BUILD_IMAGE"

#------------------------------------------------------------------------------
# Sign file, creates a torrent file, and deploy them all to the final directory
#------------------------------------------------------------------------------
echo '[@] Signing'
gpg --detach-sign --use-agent --no-armor "./${BASE_BUILD_NAME}.qcow2"

echo '[@] Torrenting'
mktorrent -w "http://lonewolf.pedrohlc.com/chaotic-aur/rootfs/${BASE_BUILD_NAME}.qcow2" -a 'udp://lonewolf.pedrohlc.com:23069' "./${BASE_BUILD_NAME}.qcow2"

echo '[@] Deploying'
cp -v ./"${BASE_BUILD_NAME}.qcow2"{,.sig,.torrent} "$BASE_BUILD_DEST"

echo '[@] Finishing creating ' "${BASE_BUILD_NAME}.qcow2"
