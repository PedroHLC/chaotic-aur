#!/usr/bin/env bash
set -o errexit

# CONFIG
readonly TKGLOGS='/srv/http/chaotic-aur/makepkglogs/_daily/tkg'
BLDTART="TkG.common.$(date '+%Y%m%d%H%M%S')"

# - Wine

# (staging vkd3d faudio)
_WINE_VARIATIONS=(
	'lol'
	'false false'
	'false true'	# vkd3d
	'true false'	# staging
	'true true'	# staging, vkd3d
)

# - NVIDIA
_NVIDIA_VARIATIONS=(
	'regular 2'
	'vulkandev 1'
)

#
# Change building settings to automate
#

# - Wine
wine_setup() {
	git checkout customization.cfg PKGBUILD

	if [ 'lol' == "$1" ]; then
		cp ~/chaotic-chroot/lol.customization.cfg ./customization.cfg
		export _PKGNAME='wine-tkg-git-leagueoflegends'
	else
		local _USE_DXVKGI='true'
		if [ "$2" == 'true' ]; then
			_USE_DXVKGI='false'
		fi

		sed -i'' "
		s/_NUKR=\"[^\"]*\"/_NUKR=\"false\"/g
		s/_NOINITIALPROMPT=\"[^\"]*\"/_NOINITIALPROMPT=\"true\"/g
		s/_use_staging=\"[^\"]*\"/_use_staging=\"$1\"/g
		s/_use_vkd3d=\"[^\"]*\"/_use_vkd3d=\"$2\"/g
		s/_dxvk_dxgi=\"[^\"]*\"/_dxvk_dxgi=\"$_USE_DXVKGI\"/g
		s/_proton_fs_hack=\"[^\"]*\"/_proton_fs_hack=\"true\"/g
		s/_FS_bypass_compositor=\"[^\"]*\"/_FS_bypass_compositor=\"true\"/g
		s/_community_patches=\"[^\"]*\"/_community_patches=\"amdags.mypatch\"/g
		s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
		" customization.cfg

		local _SRCINFO=$(makepkg -o --noprepare --printsrcinfo)
		export _PKGNAME=$(echo "$_SRCINFO" | grep -Po '(?<=pkgname = )(.*)$')
	fi

	echo "[build-tkg] customization set to: ${_PKGNAME}"
}

# - NVIDIA
nvidia_setup() {
	rm options || echo 'Starting first NV variation...'
	git checkout customization.cfg PKGBUILD

	sed -i'' "
	s/_driver_branch=\"[^\"]*\"/_driver_branch=\"$1\"/g
	s/_dkms=\"[^\"]*\"/_dkms=\"true\"/g
	s/_nvdxvktest=\"[^\"]*\"/_nvdxvktest=\"true\"/g
	" customization.cfg

	sed -i'' "
	s/read \-p \".*What driver version do you want\?.*$/export CONDITION=$2/g
	" PKGBUILD

	export TARGET_EXTRAPKGS='linux-headers'
}

# - Mesa
mesa_setup() {
	git checkout customization.cfg PKGBUILD

	sed -i'' "
	s/#MESA_WHICH_LLVM=/MESA_WHICH_LLVM=4/g
	s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
	" customization.cfg

	echo '[build-tkg] applied mesa customization'
	
	export TARGET_MECHA='mesa-tkg'
	export TARGET_EXTRAPKGS='multilib-devel ccache'
}

# - LLVM
llvm_setup() {
	echo '[build-tkg] applied llvm customization'
	
	export TARGET_MECHA='llvm-tkg'
	export TARGET_EXTRAPKGS='multilib-devel ccache'
}

# - Proton
proton_setup() {
	git checkout proton-tkg.cfg PKGBUILD

	sed -i'' "
	s/_NOINITIALPROMPT=\"[^\"]*\"/_NOINITIALPROMPT=\"true\"/g
	s/_proton_winetricks=\"[^\"]*\"/_proton_winetricks=\"false\"/g
	s/_community_patches=\"[^\"]*\"/_community_patches=\"amdags.mypatch\"/g
	s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
	" proton-tkg.cfg
	
	export TARGET_EXTRAPKGS='ccache mingw-w64-gcc'
}

#
# Helpers
#
wine_makepkg() {
	export TARGET_UPPER='wine-tkg'
	export TARGET_NUKE=0
	export TARGET_EXTRAPKGS='ccache mingw-w64-gcc'
        ~/chaotic-makepkg \
		--noconfirm $@
	~/chaotic-add
}

#
# Clone TKG
#
cd /tmp || exit
git clone https://github.com/Tk-Glitch/PKGBUILDS.git "$BLDTART"
cd "$BLDTART"

#
# Build
#
mkdir -p "$TKGLOGS"

# - Wine
if [ -z "$TKG_NOWINE" ]; then
	cd wine-tkg-git || exit
	for VARIATION in "${_WINE_VARIATIONS[@]}"
	do
		git reset --hard HEAD
		git clean -dfx

		wine_setup $VARIATION
		rm -rf ./src

		wine_makepkg -sC 2>&1 | tee "$TKGLOGS/$_PKGNAME.log"

		sed -i'' "
		s/_EXTERNAL_INSTALL=\"[^\"]*\"/_EXTERNAL_INSTALL=\"true\"/g
		s/_EXTERNAL_INSTALL_TYPE=\"[^\"]*\"/_EXTERNAL_INSTALL_TYPE=\"opt\"/g
		" customization.cfg

		if [ "$VARIATION" == 'lol' ]; then
			export _OPT_PKGNAME="${_PKGNAME/%-git*/-git-leagueoflegends-opt}"
			sed -i'' "
			s/_PKGNAME_OVERRIDE=\"[^\"]*\"/_PKGNAME_OVERRIDE=\"leagueoflegends-opt\"/g
			" customization.cfg
		else
			export _OPT_PKGNAME="${_PKGNAME/%-git/-opt-git}"
		fi

		echo "[build-tkg] customization set to: ${_OPT_PKGNAME}"

		ln -srf "src/${_PKGNAME}-32-build" "src/${_OPT_PKGNAME}-32-build"
		ln -srf "src/${_PKGNAME}-64-build" "src/${_OPT_PKGNAME}-64-build"

		wine_makepkg -Rc 2>&1 | tee "$TKGLOGS/$_OPT_PKGNAME.log"
	done

	git checkout customization.cfg PKGBUILD
	unset TARGET_UPPER TARGET_NUKE TARGET_EXTRAPKGS
	cd ..
fi

# - NVIDIA
if [ -z "$TKG_NONV" ]; then
	cd nvidia-all || exit
	for VARIATION in "${_NVIDIA_VARIATIONS[@]}"; do
		nvidia_setup $VARIATION
		_VAR=($VARIATION)
		~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/nvidia-${_VAR[0]}.log"
		~/chaotic-add
		unset TARGET_EXTRAPKGS
	done
	cd ..
fi

# - vulkan-headers
if [ -z "$TKG_NOVK" ]; then
	cd vulkan-headers-git || exit
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/vulkan-headers-git.log"
	~/chaotic-add
	unset TARGET_EXTRAPKGS
	cd ..
fi

# - llvm
if [ -z "$TKG_NOLLVM" ]; then
	ln -s llvm-git llvm-tkg-git
	cd llvm-tkg-git || exit
	llvm_setup
	~/chaotic-makepkg --nocheck --noconfirm -C 2>&1 | tee "$TKGLOGS/llvm-git.log"
	~/chaotic-add
	unset TARGET_MECHA TARGET_EXTRAPKGS
	cd ..
fi

# - mesa
if [ -z "$TKG_NOMESA" ]; then
	ln -s mesa-git mesa-tkg-git
	cd mesa-tkg-git || exit
	mesa_setup
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/mesa-git.log"
	~/chaotic-add
	unset TARGET_MECHA TARGET_EXTRAPKGS
	cd ..
fi

# - spirv
if [ -z "$TKG_NOSPIRV" ]; then
	ln -s spirv-tools-git spirv-tools-tkg-git
	cd spirv-tools-tkg-git || exit
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/spirv-tools-git.log"
	~/chaotic-add
	cd ..
fi

# - proton
#if [ -z "$TKG_NOPROTON" ]; then
#	cd proton-tkg || exit
#	proton_setup
#	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/proton.log"
#	~/chaotic-add
#	unset TARGET_EXTRAPKGS
#	cd ..
#fi

#
# Clean
#
echo '[build-tkg] Nuking everything'
cd /tmp || exit
sudo rm -rf "$BLDTART"


# - Logs
cd "$TKGLOGS"
echo '[build-tkg] No need of successful logs'
rm *-opt-git.log || echo '[build-tkg] No -opt builds logs found'
~/chaotic-clean-logs
