#!/usr/bin/env bash

# CONFIG
readonly TKGLOGS='/srv/http/chaotic-aur/makepkglogs/_daily/tkg'
BLDTART="TkG.common.$(date '+%Y%m%d%H%M%S')"
export TKG_NONV=1


# - Wine

# (staging vkd3d faudio)
_WINE_VARIATIONS=(
	'lol'
	'false false'
	'false true'	# vkd3d
	'true false'	# staging
	'true true'	# staging, vkd3d
)

# - NVIDIA
_NVIDIA_VARIATIONS=(
	'regular 2'
	'vulkandev 1'
)

#
# Change building settings to automate
#

# - Wine
wine_setup() {
	git checkout customization.cfg PKGBUILD

	if [ 'lol' == "$1" ]; then
		_use_staging='true'
		_use_vkd3d='false'
	else
		_use_staging=$1
		_use_vkd3d=$2
	fi

	echo "[build-tkg] Building customization"
	sed "
	s/_NUKR=\"[^\"]*\"/_NUKR=\"false\"/g
	s/_NOINITIALPROMPT=\"[^\"]*\"/_NOINITIALPROMPT=\"true\"/g
	s/_use_staging=\"[^\"]*\"/_use_staging=\"${_use_staging}\"/g
	s/_use_vkd3d=\"[^\"]*\"/_use_vkd3d=\"${_use_vkd3d}\"/g
	s/_proton_fs_hack=\"[^\"]*\"/_proton_fs_hack=\"true\"/g
	s/_FS_bypass_compositor=\"[^\"]*\"/_FS_bypass_compositor=\"true\"/g
	s/_community_patches=\"[^\"]*\"/_community_patches=\"amdags.mypatch\"/g
	s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
	" wine-tkg-profiles/sample-external-config.cfg > customization.cfg

	echo '' > wine-tkg-profiles/advanced-customization.cfg

	if [ 'lol' == "$1" ]; then
		echo "[build-tkg] Lol FIX"
		sed -i'' "
		s/_lol920_fix=\"[^\"]*\"/_lol920_fix=\"true\"/g
		" customization.cfg
		
		export _PKGNAME='wine-tkg-git-leagueoflegends'
		export _OPT_PKGNAME="${_PKGNAME/%-git*/-git-leagueoflegends-opt}"
	else
		local _SRCINFO=$(makepkg -o --noprepare --printsrcinfo)
		export _PKGNAME=$(echo "$_SRCINFO" | grep -Po '(?<=pkgname = )(.*)$')
		export _OPT_PKGNAME="${_PKGNAME/%-git/-opt-git}"
	fi
	
	export TARGET_UPPER='wine-tkg'
	export TARGET_NUKE=0
	export TARGET_EXTRAPKGS='ccache mingw-w64-gcc'

	echo "[build-tkg] customization set to: ${_PKGNAME}"
}

wine-opt_setup() {
		sed -i'' "
		s/_EXTERNAL_INSTALL=\"[^\"]*\"/_EXTERNAL_INSTALL=\"true\"/g
		s/_EXTERNAL_INSTALL_TYPE=\"[^\"]*\"/_EXTERNAL_INSTALL_TYPE=\"opt\"/g
		" customization.cfg

		if [ "$VARIATION" == 'lol' ]; then
			sed -i'' "
			s/_PKGNAME_OVERRIDE=\"[^\"]*\"/_PKGNAME_OVERRIDE=\"leagueoflegends-opt\"/g
			" customization.cfg
		fi

		echo "[build-tkg] customization set to: ${_OPT_PKGNAME}"
}

# - NVIDIA
nvidia_setup() {
	rm options || echo 'Starting first NV variation...'
	git checkout customization.cfg PKGBUILD

	sed -i'' "
	s/_driver_branch=\"[^\"]*\"/_driver_branch=\"$1\"/g
	s/_dkms=\"[^\"]*\"/_dkms=\"true\"/g
	s/_nvdxvktest=\"[^\"]*\"/_nvdxvktest=\"true\"/g
	" customization.cfg

	sed -i'' "
	s/read \-p \".*What driver version do you want\?.*$/export CONDITION=$2/g
	" PKGBUILD

	export TARGET_EXTRAPKGS='linux-headers'
}

# - Mesa
mesa_setup() {
	git checkout customization.cfg PKGBUILD

	sed -i'' "
	s/#MESA_WHICH_LLVM=/MESA_WHICH_LLVM=4/g
	s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
	" customization.cfg

	echo '[build-tkg] applied mesa customization'
	
	export TARGET_MECHA='mesa-tkg'
	export TARGET_EXTRAPKGS='multilib-devel ccache'
}

# - LLVM
llvm_setup() {
	echo '[build-tkg] applied llvm customization'
	
	export TARGET_MECHA='llvm-tkg'
	export TARGET_EXTRAPKGS='multilib-devel ccache'
}

# - Proton
proton_setup() {
	git checkout proton-tkg.cfg PKGBUILD

	sed "
	s/_NOINITIALPROMPT=\"[^\"]*\"/_NOINITIALPROMPT=\"true\"/g
	s/_proton_winetricks=\"[^\"]*\"/_proton_winetricks=\"false\"/g
	s/_community_patches=\"[^\"]*\"/_community_patches=\"amdags.mypatch\"/g
	s/_user_patches_no_confirm=\"[^\"]*\"/_user_patches_no_confirm=\"true\"/g
	" proton-tkg-profiles/sample-external-config.cfg > proton-tkg.cfg
	echo '' > proton-tkg-profiles/advanced-customization.cfg
	
	export TARGET_UPPER='wine-tkg'
	export TARGET_NUKE=0
	export TARGET_EXTRAPKGS='ccache mingw-w64-gcc'
}

#
# Helpers
#
git_cleanup() {
	git reset --hard
	git clean -dfx
	git pull -ff
}

#
# Clone TKG
#
cd /tmp || exit
mkdir "$BLDTART"
cd "$BLDTART" || exit

#
# Build
#
mkdir -p "$TKGLOGS"

# - Wine
if [ -z "$TKG_NOWINE" ]; then
	git clone 'https://github.com/Frogging-Family/wine-tkg-git.git'
	pushd wine-tkg-git/wine-tkg-git
	for VARIATION in "${_WINE_VARIATIONS[@]}"
	do
		git_cleanup

		wine_setup $VARIATION
		
		# Build wine
		~/chaotic-makepkg -sC --noconfirm 2>&1 | tee "$TKGLOGS/$_PKGNAME.log"
		~/chaotic-add || echo 'OKAY'

		# Build wine-opt
		wine-opt_setup
		ln -srf "src/${_PKGNAME}-32-build" "src/${_OPT_PKGNAME}-32-build"
		ln -srf "src/${_PKGNAME}-64-build" "src/${_OPT_PKGNAME}-64-build"

		~/chaotic-makepkg -Rc --noconfirm 2>&1 | tee "$TKGLOGS/$_OPT_PKGNAME.log"
		~/chaotic-add || echo 'OKAY'
	done

	unset TARGET_UPPER TARGET_NUKE TARGET_EXTRAPKGS
	popd
fi

# - NVIDIA
if [ -z "$TKG_NONV" ]; then
	git clone https://github.com/Frogging-Family/nvidia-all.git

	pushd nvidia-all
	for VARIATION in "${_NVIDIA_VARIATIONS[@]}"; do
		nvidia_setup $VARIATION
		_VAR=($VARIATION)
		~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/nvidia-${_VAR[0]}.log"
		~/chaotic-add || echo 'OK'
		unset TARGET_EXTRAPKGS
	done
	popd
fi

# - vulkan-headers
if [ -z "$TKG_NOVK" ]; then
	git clone 'https://github.com/Frogging-Family/vulkan-headers-git.git'

	pushd vulkan-headers-git
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/vulkan-headers-git.log"
	~/chaotic-add || echo 'OK'
	unset TARGET_EXTRAPKGS
	popd
fi

# - llvm
if [ -z "$TKG_NOLLVM" ]; then
	git clone 'https://github.com/Frogging-Family/llvm-git.git' llvm-tkg-git

	pushd llvm-tkg-git
	llvm_setup
	~/chaotic-makepkg --nocheck --noconfirm -C 2>&1 | tee "$TKGLOGS/llvm-git.log"
	~/chaotic-add || echo 'OK'
	unset TARGET_MECHA TARGET_EXTRAPKGS
	popd
fi

# - mesa
if [ -z "$TKG_NOMESA" ]; then
	git clone 'https://github.com/Frogging-Family/mesa-git.git' mesa-tkg-git

	pushd mesa-tkg-git
	mesa_setup
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/mesa-git.log"
	~/chaotic-add || echo 'OK'
	unset TARGET_MECHA TARGET_EXTRAPKGS
	popd
fi

# - spirv
if [ -z "$TKG_NOSPIRV" ]; then
	git clone 'https://github.com/Frogging-Family/spirv-tools-git.git' spirv-tools-tkg-git

	pushd spirv-tools-tkg-git
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/spirv-tools-git.log"
	~/chaotic-add || echo 'OK'
	popd
fi

# - proton
if [ -z "$TKG_NOPROTON" ]; then
	[ -d wine-tkg-git ] || git clone 'https://github.com/Frogging-Family/wine-tkg-git.git'

	pushd wine-tkg-git
	git_cleanup
	
	pushd wine-tkg-git
	wine_setup 'true' 'true'
	popd

	pushd proton-tkg
	proton_setup
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/proton.log"
	~/chaotic-add || echo 'OK'
	unset TARGET_UPPER TARGET_NUKE TARGET_EXTRAPKGS
	popd

	popd
fi

#
# Clean
#
echo '[build-tkg] Nuking everything'
cd /tmp || exit
sudo rm --one-file-system -rf "$BLDTART"


# - Logs
cd "$TKGLOGS"
echo '[build-tkg] No need of successful logs'
rm *-opt-git.log || echo '[build-tkg] No -opt builds logs found'
~/chaotic-clean-logs
