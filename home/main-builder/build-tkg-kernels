#!/usr/bin/env bash
set -o errexit

# CONFIG
readonly TKGLOGS='/srv/http/chaotic-aur/makepkglogs/_daily/tkg/kernels'
readonly _TARGET_DIR='TkG.kernels'


# (version)
readonly _LINUX_LTS='419'
readonly _LINUX_STABLE='54'
readonly _LINUX_SCHED=(
	'pds 0'
	'bmq 1'
	'muqss 0'
)
readonly _LINUX_MARCH=('generic'
    'atom' 'barcelona' 'bobcat' 'broadwell'
	'bulldozer' 'cannonlake' 'core2' 'excavator'
	'haswell' 'icelake' 'ivybridge' 'jaguar'
	'k10' 'k8' 'k8sse3' 'mpsc' 'nehalem'
	'piledriver' 'sandybridge' 'silvermont'
	'skylake' 'skylakex' 'steamroller'
	'westmere' 'zen' 'zen2'
)

#
# Change building settings to automate
#

# - Linux
kernel_setup() {
	git checkout customization.cfg PKGBUILD
	git pull -ff

	local _PKGBASE="linux-tkg-$1-$3"
	if [ "$3" == 'generic' ]; then
		local _PKGBASE="linux-tkg-$1"
	fi
	if [ "$4" == 'lts' ]; then
		local _PKGBASE="linux-lts-tkg-$1"
	fi

	sed -i'' "
	s/_NUKR=\"[^\"]*\"/_NUKR=\"false\"/g
	s/_OPTIPROFILE=\"[^\"]*\"/_OPTIPROFILE=\"1\"/g
	s/_modprobeddb=\"[^\"]*\"/_modprobeddb=\"false\"/g
	s/_menunconfig=\"[^\"]*\"/_menunconfig=\"false\"/g
	s/_diffconfig=\"[^\"]*\"/_diffconfig=\"false\"/g
	s/_cpusched=\"[^\"]*\"/_cpusched=\"$1\"/g
	s/_rr_interval=\"[^\"]*\"/_rr_interval=\"default\"/g
	s/_sched_yield_type=\"[^\"]*\"/_sched_yield_type=\"$2\"/g
	s/_ftracedisable=\"[^\"]*\"/_ftracedisable=\"true\"/g
	s/_numadisable=\"[^\"]*\"/_numadisable=\"false\"/g
	s/_tickless=\"[^\"]*\"/_tickless=\"2\"/g
	s/_voluntary_preempt=\"[^\"]*\"/_voluntary_preempt=\"true\"/g
	s/_acs_override=\"[^\"]*\"/_acs_override=\"true\"/g
	s/_amd_overdrive_flickering_fix=\"[^\"]*\"/_amd_overdrive_flickering_fix=\"false\"/g
	s/_ksm_uksm=\"[^\"]*\"/_ksm_uksm=\"true\"/g
	s/_bcachefs=\"[^\"]*\"/_bcachefs=\"false\"/g
	s/_bfqmq=\"[^\"]*\"/_bfqmq=\"true\"/g
	s/_zfsfix=\"[^\"]*\"/_zfsfix=\"true\"/g
	s/_fsync=\"[^\"]*\"/_fsync=\"true\"/g
	s/_umip_instruction_emulation=\"[^\"]*\"/_umip_instruction_emulation=\"true\"/g
	s/_processor_opt=\"[^\"]*\"/_processor_opt=\"$3\"/g
	s/_smt_nice=\"[^\"]*\"/_smt_nice=\"true\"/g
	s/_random_trust_cpu=\"[^\"]*\"/_random_trust_cpu=\"true\"/g
	s/_runqueue_sharing=\"[^\"]*\"/_runqueue_sharing=\"mc\"/g
	s/_timer_freq=\"[^\"]*\"/_timer_freq=\"750\"/g
	s/_user_patches=\"[^\"]*\"/_user_patches=\"false\"/g
	s/_custom_pkgbase=\"[^\"]*\"/_custom_pkgbase=\"$_PKGBASE\"/g
	" customization.cfg

	echo '[build-tkg] applied kernel customization'

	export TARGET_EXTRAPKGS='ccache'
}

#
# Clone TKG
#
mkdir -p "$TKGLOGS"
cd /tmp
git clone https://github.com/Tk-Glitch/PKGBUILDS.git "$_TARGET_DIR"
cd "$_TARGET_DIR"

#
# Build
#

pushd "linux${_LINUX_STABLE}-tkg"
for _VAR_SCHED in "${_LINUX_SCHED[@]}"; do
	for _VAR_MARCH in "${_LINUX_MARCH[@]}"; do
		kernel_setup $_VAR_SCHED $_VAR_MARCH
		_VAR=($_VAR_SCHED)
		~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/linux-${_VAR[0]}-${_VAR_MARCH}.log"
		~/chaotic-add
		unset TARGET_EXTRAPKGS
	done
done
popd

#
# LTS
#
pushd "linux${_LINUX_LTS}-tkg"
for _VAR_SCHED in "${_LINUX_SCHED[@]}"; do
	kernel_setup $_VAR_SCHED 'generic' 'lts'
	_VAR=($_VAR_SCHED)
	~/chaotic-makepkg --noconfirm -C 2>&1 | tee "$TKGLOGS/linux-lts-${_VAR[0]}.log"
	~/chaotic-add
	unset TARGET_EXTRAPKGS
done
popd


#
# Clean
#
echo '[build-tkg] Nuking everything'
cd /tmp
sudo rm -rf "$_TARGET_DIR"


# - Logs
cd "$TKGLOGS"
#~/chaotic-clean-logs
